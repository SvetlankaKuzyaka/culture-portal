{"version":3,"sources":["webpack:///./src/components/search/Searchbox.jsx","webpack:///./src/utils/useDirectorsNamespaces.jsx","webpack:///./src/components/search/Results.jsx","webpack:///./src/pages/search.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/i18n.js","webpack:///./src/components/layout/LanguageSwitcher.jsx","webpack:///./src/components/layout/Navigation.jsx","webpack:///./src/components/layout/Header.jsx"],"names":["Searchbox","_ref","value","onChange","input","useRef","useEffect","current","focus","react_default","a","createElement","type","event","target","ref","useDirectorsNamespaces","_3331973230","data","allEnJson","edges","map","item","node","path","slice","Result","filter","namespaces","t","useTranslation","results","forEach","director","index","_prop","prop","Object","assign","keys","toLowerCase","includes","key","uniqid","gatsby_browser_entry","to","state","Search","_useState","useState","query","setQuery","Fragment","Header","search_Searchbox","Results","SearchWrapper","window","react","fallback","search_Search","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","i18n","use","Backend","LanguageDetector","initReactI18next","init","returnObjects","debug","fallbackLng","backend","loadPath","LanguageSwitcher","i18next","language","setValue","changeLanguage","lang","toUpperCase","Navigation","_useTranslation","layout_LanguageSwitcher","languages","layout_Navigation"],"mappings":"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","file":"component---src-pages-search-jsx-a90db93e952011610c8f.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Searchbox = ({ value, onChange }) => {\n  const input = useRef(null);\n\n  const handleChange = (event) => onChange(event.target.value);\n\n  useEffect(() => {\n    input.current.focus();\n  });\n\n  return (\n    <input type=\"text\" value={value} onChange={handleChange} ref={input} />\n  );\n};\n\nSearchbox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbox;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nconst useDirectorsNamespaces = () => {\n  const {\n    allEnJson: { edges },\n  } = useStaticQuery(\n    graphql`\n      query Namespaces {\n        allEnJson(filter: { lng: { ne: null } }) {\n          edges {\n            node {\n              path\n            }\n          }\n        }\n      }\n    `\n  );\n\n  return edges.map((item) => item.node.path.slice(1));\n};\n\nexport default useDirectorsNamespaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { useTranslation } from 'react-i18next';\nimport uniqid from 'uniqid';\n\nimport useDirectorsNamespaces from '../../utils/useDirectorsNamespaces';\n\nconst Result = ({ filter }) => {\n  const namespaces = useDirectorsNamespaces();\n  const { t } = useTranslation(namespaces);\n  const results = {};\n\n  namespaces.forEach((director, index) => {\n    const prop = {\n      [t(`${director}:name`)]: namespaces[index],\n    };\n\n    Object.assign(results, prop);\n  });\n\n  return (\n    <ul>\n      {Object.keys(results)\n        .filter((director) =>\n          director.toLowerCase().includes(filter.toLowerCase())\n        )\n        .map((director) => (\n          <li key={uniqid()}>\n            <Link to=\"/director/\" state={{ director: results[director] }}>\n              {director}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nResult.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Result;\n","import React, { Suspense, useState } from 'react';\n\nimport Header from '../components/layout/Header';\nimport Searchbox from '../components/search/Searchbox';\nimport Results from '../components/search/Results';\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n\n  return (\n    <>\n      <Header />\n      <Searchbox value={query} onChange={setQuery} />\n      <Results filter={query} />\n    </>\n  );\n};\n\nconst SearchWrapper = () => (\n  <>\n    {typeof window !== `undefined` && (\n      <Suspense fallback=\"loading\">\n        <Search />\n      </Suspense>\n    )}\n  </>\n);\n\nexport default SearchWrapper;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nconst backendConfig = {\n  loadPath: '/culture-portal/locales/{{lng}}/{{ns}}.json',\n};\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    returnObjects: true,\n    debug: true,\n    fallbackLng: 'en',\n    backend: backendConfig,\n  });\n\nexport default i18n;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport uniqid from 'uniqid';\n\nimport i18next from '../../utils/i18n';\n\nconst LanguageSwitcher = () => {\n  const languages = ['en', 'ru', 'by'];\n  const { i18n } = useTranslation('layout');\n  const [value, setValue] = useState(i18next.language.slice(0, 2));\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    i18n.changeLanguage(event.target.value);\n  };\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {languages.map((lang) => (\n        <option key={uniqid()} value={lang}>\n          {lang.toUpperCase()}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default LanguageSwitcher;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { useTranslation } from 'react-i18next';\n\nconst Navigation = () => {\n  const { t } = useTranslation('layout');\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">{t('link_main-page')}</Link>\n        </li>\n        <li>\n          <Link to=\"/search/\">{t('link_search')}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport LanguageSwitcher from './LanguageSwitcher';\nimport Navigation from './Navigation';\n\nconst Header = () => {\n  const { t, i18n } = useTranslation('layout');\n\n  return (\n    <>\n      <LanguageSwitcher />\n      <h1>{t('title_header')}</h1>\n      <h2>{i18n.languages[0]}</h2>\n      <Navigation />\n    </>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}