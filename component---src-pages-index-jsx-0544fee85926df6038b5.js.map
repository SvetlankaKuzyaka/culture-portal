{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/i18n.js","webpack:///./src/components/layout/LanguageSwitcher.jsx","webpack:///./src/components/layout/Navigation.jsx","webpack:///./src/components/layout/Header.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_Header__WEBPACK_IMPORTED_MODULE_1__","Main","a","createElement","Fragment","MainWrapper","window","fallback","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","i18n","use","Backend","LanguageDetector","initReactI18next","init","returnObjects","debug","fallbackLng","backend","loadPath","LanguageSwitcher","useTranslation","_useState","useState","i18next","language","slice","value","setValue","react_default","onChange","event","target","changeLanguage","map","lang","key","uniqid","toUpperCase","Navigation","t","gatsby_browser_entry","to","Header","layout_LanguageSwitcher","layout_Navigation"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAIMO,EAAO,kBACXH,EAAAI,EAAAC,cAAAL,EAAAI,EAAAE,SAAA,KACEN,EAAAI,EAAAC,cAACH,EAAA,EAAD,QAcWK,UAVK,kBAClBP,EAAAI,EAAAC,cAAAL,EAAAI,EAAAE,SAAA,KACG,oBAAOE,QACNR,EAAAI,EAAAC,cAACN,EAAA,SAAD,CAAUU,SAAS,WACjBT,EAAAI,EAAAC,cAACF,EAAD,8BCdR,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAX,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAgB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAAK,EAAAc,GAAAnB,EAAAqB,EAAAnB,EAAA,sBAAAkB,EAAAZ,IAAAR,EAAA,KAAAA,EAAA,GAcyBsB,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEL,IAAMf,cAAcqB,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,2HCEXC,IACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,eAAe,EACfC,OAAO,EACPC,YAAa,KACbC,QAZkB,CACpBC,SAAU,iDAcGV,QAAf,ECQeW,EAtBU,WACvB,IACQX,EAASY,YAAe,UAAxBZ,KAFqBa,EAGHC,mBAASC,EAAQC,SAASC,MAAM,EAAG,IAAtDC,EAHsBL,EAAA,GAGfM,EAHeN,EAAA,GAW7B,OACEO,EAAA9C,EAAAC,cAAA,UAAQ2C,MAAOA,EAAOG,SAPH,SAACC,GACpBH,EAASG,EAAMC,OAAOL,OAEtBlB,EAAKwB,eAAeF,EAAMC,OAAOL,SAPjB,CAAC,KAAM,KAAM,MAYhBO,IAAI,SAACC,GAAD,OACbN,EAAA9C,EAAAC,cAAA,UAAQoD,IAAKC,MAAUV,MAAOQ,GAC3BA,EAAKG,4BCADC,EAjBI,WAAM,IACfC,EAAMnB,YAAe,UAArBmB,EAER,OACEX,EAAA9C,EAAAC,cAAA,WACE6C,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAACyD,EAAA,EAAD,CAAMC,GAAG,KAAKF,EAAE,oBAElBX,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAACyD,EAAA,EAAD,CAAMC,GAAG,YAAYF,EAAE,oBCIlBG,IAZA,WAAM,IACXH,EAAMnB,YAAe,UAArBmB,EAER,OACEX,EAAA9C,EAAAC,cAAA6C,EAAA9C,EAAAE,SAAA,KACE4C,EAAA9C,EAAAC,cAAC4D,EAAD,MACAf,EAAA9C,EAAAC,cAAA,UAAKwD,EAAE,iBACPX,EAAA9C,EAAAC,cAAC6D,EAAD","file":"component---src-pages-index-jsx-0544fee85926df6038b5.js","sourcesContent":["import React, { Suspense } from 'react';\n\nimport Header from '../components/layout/Header';\n\nconst Main = () => (\n  <>\n    <Header />\n  </>\n);\n\nconst MainWrapper = () => (\n  <>\n    {typeof window !== `undefined` && (\n      <Suspense fallback=\"loading\">\n        <Main />\n      </Suspense>\n    )}\n  </>\n);\n\nexport default MainWrapper;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nconst backendConfig = {\n  loadPath: '/culture-portal/locales/{{lng}}/{{ns}}.json',\n};\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    returnObjects: true,\n    debug: true,\n    fallbackLng: 'en',\n    backend: backendConfig,\n  });\n\nexport default i18n;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport uniqid from 'uniqid';\n\nimport i18next from '../../utils/i18n';\n\nconst LanguageSwitcher = () => {\n  const languages = ['en', 'ru', 'by'];\n  const { i18n } = useTranslation('layout');\n  const [value, setValue] = useState(i18next.language.slice(0, 2));\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    i18n.changeLanguage(event.target.value);\n  };\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {languages.map((lang) => (\n        <option key={uniqid()} value={lang}>\n          {lang.toUpperCase()}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default LanguageSwitcher;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { useTranslation } from 'react-i18next';\n\nconst Navigation = () => {\n  const { t } = useTranslation('layout');\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">{t('link_main-page')}</Link>\n        </li>\n        <li>\n          <Link to=\"/search/\">{t('link_search')}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport LanguageSwitcher from './LanguageSwitcher';\nimport Navigation from './Navigation';\n\nconst Header = () => {\n  const { t } = useTranslation('layout');\n\n  return (\n    <>\n      <LanguageSwitcher />\n      <h1>{t('title_header')}</h1>\n      <Navigation />\n    </>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}